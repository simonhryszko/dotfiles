services:
  db:
    image: postgres:16
    shm_size: 1g
    restart: unless-stopped
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: windmill
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    image: ${WM_IMAGE}
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.windmill.rule=Host(`windmill.localhost`)"
      - "traefik.http.routers.windmill.entrypoints=web"
      - "traefik.http.services.windmill.loadbalancer.server.port=8000"
      - "traefik.docker.network=traefik"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - MODE=server
    networks:
      - traefik
      - default
      - ollama_ollama-net
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - worker-logs:/tmp/windmill/logs

  worker_master:
    build:
      context: .
      dockerfile: dockerFile_worker
      args:
        WM_IMAGE: ${WM_IMAGE}
    # image: ${WM_IMAGE}
    # user: "${USERMAP_UID:-1000}:${USERMAP_GID:-1000}"
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 2048M
    restart: unless-stopped
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - MODE=worker
      - WORKER_GROUP=default
      - WORKER_TAGS=master
      - NUM_WORKERS=1
      # - INIT_SCRIPT="/init.sh"
      # - KEEP_JOB_DIR=true
    networks:
      - default
      - ollama_ollama-net
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - worker-dependency-cache:/tmp/windmill/cache
      - worker-logs:/tmp/windmill/logs
      - ./init.sh:/init.sh:ro
      - ./shared:/shared
      - $HOME/Documents/obsidian:/obsidian:ro
      # - job-dir:/tmp/windmill

  # worker_extra:
  #   image: ${WM_IMAGE}
  #   deploy:
  #     replicas: 1
  #     resources:
  #       limits:
  #         cpus: "1"
  #         memory: 2048M
  #   restart: unless-stopped
  #   environment:
  #     - DATABASE_URL=${DATABASE_URL}
  #     - MODE=worker
  #     - WORKER_TAGS=extras
  #     - INIT_SCRIPT="/init.sh"
  #     - NUM_WORKERS=2
  #     # - KEEP_JOB_DIR=true
  #   networks:
  #     - default
  #     - ollama_ollama-net
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - worker-dependency-cache:/tmp/windmill/cache
  #     - worker-logs:/tmp/windmill/logs
  #     - ./init.sh:/init.sh:ro

  worker_native:
    image: ${WM_IMAGE}
    # user: "${USERMAP_UID:-1000}:${USERMAP_GID:-1000}"
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 2048M
    restart: unless-stopped
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - MODE=worker
      - WORKER_GROUP=native
      - NUM_WORKERS=1
      - SLEEP_QUEUE=200
      - INIT_SCRIPT="/init.sh"
    networks:
      - default
      - ollama_ollama-net
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - worker-logs:/tmp/windmill/logs
      - ./init.sh:/init.sh:ro
      - ./shared:/shared
      - $HOME/Documents/obsidian:/obsidian:ro

  windmill_worker_reports:
    image: ${WM_IMAGE}
    # user: "${USERMAP_UID:-1000}:${USERMAP_GID:-1000}"
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 2048M
    restart: unless-stopped
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - MODE=worker
      - WORKER_GROUP=reports
      - INIT_SCRIPT="/init.sh"
      # - KEEP_JOB_DIR=true
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # - worker-dependency-cache:/tmp/windmill/cache
      - worker-dependency-cache:/tmp/windmill/cache
      - worker-logs:/tmp/windmill/logs
      # - job-dir:/tmp/windmill
      - ./init.sh:/init.sh:ro
      - ./shared:/shared
      - $HOME/Documents/obsidian:/obsidian:ro

  lsp:
    image: ghcr.io/windmill-labs/windmill-lsp:latest
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: simonhryszko@gmail.com
      PGADMIN_DEFAULT_PASSWORD: ${PG_PASSWORD}
      PGADMIN_LISTEN_PORT: 5638
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.localhost`)"
      - "traefik.http.routers.pgadmin.entrypoints=web"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=5638"
      - "traefik.docker.network=traefik"
    networks:
      - traefik
      - default

  flyway:
    container_name: flyway
    image: flyway/flyway
    depends_on:
      db:
        condition: service_healthy
    command: migrate
    volumes:
      - ./migrations:/flyway/sql
    networks:
      - default
    environment:
      - FLYWAY_URL=jdbc:postgresql://db:5432/${POSTGRES_DB}
      - FLYWAY_USER=${PG_USERNAME}
      - FLYWAY_PASSWORD=${PG_PASSWORD}
      - FLYWAY_DEFAULT_SCHEMA=data
      - FLYWAY_PLACEHOLDER_REPLACEMENT=true
      - FLYWAY_PLACEHOLDERS_DATA_USER=${DATA_USER}
      - FLYWAY_PLACEHOLDERS_DATA_PASSWORD=${DATA_PASSWORD}


networks:
  traefik:
    name: traefik
    external: true
  ollama_ollama-net:
    external: true

volumes:
  db-data: null
  worker-dependency-cache: null
  worker-logs: null
  pgadmin-data: null
